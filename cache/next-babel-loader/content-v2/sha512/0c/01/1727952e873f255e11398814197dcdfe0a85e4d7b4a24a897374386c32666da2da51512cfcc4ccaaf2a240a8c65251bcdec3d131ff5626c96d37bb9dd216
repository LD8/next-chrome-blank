{"ast":null,"code":"import _defineProperty from \"/Users/lipeiwen/Desktop/next-chrome-blank/node_modules/_@babel_runtime@7.12.5@@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lipeiwen/Desktop/next-chrome-blank/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/globals.css';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var config = {\n    initialColorMode: 'dark' // useSystemColorMode: true,\n\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: extendTheme({\n      config: config\n    }),\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/lipeiwen/Desktop/next-chrome-blank/pages/_app.js"],"names":["ChakraProvider","extendTheme","MyApp","Component","pageProps","config","initialColorMode"],"mappings":";;;;;;;;AAAA,OAAO,uBAAP;AACA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,MAAMC,MAAM,GAAG;AACbC,IAAAA,gBAAgB,EAAE,MADL,CAEb;;AAFa,GAAf;AAIA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEL,WAAW,CAAC;AAAEI,MAAAA,MAAM,EAANA;AAAF,KAAD,CAAlC;AAAA,2BACE,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAVQF,K;AAYT,eAAeA,KAAf","sourcesContent":["import '../styles/globals.css'\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react'\n\nfunction MyApp({ Component, pageProps }) {\n  const config = {\n    initialColorMode: 'dark',\n    // useSystemColorMode: true,\n  }\n  return (\n    <ChakraProvider theme={extendTheme({ config })}>\n      <Component {...pageProps} />\n    </ChakraProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}