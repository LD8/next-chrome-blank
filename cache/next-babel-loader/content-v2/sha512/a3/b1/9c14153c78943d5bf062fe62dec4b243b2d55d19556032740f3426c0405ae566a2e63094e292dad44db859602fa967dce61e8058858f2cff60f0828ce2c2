{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js\";\nimport React, { useState } from 'react';\nimport { Text, WrapItem, Avatar, Button, LinkBox, LinkOverlay } from '@chakra-ui/react';\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons';\n\nconst Card = ({\n  href,\n  text,\n  index = -1,\n  setOpenedCardIndex,\n  onOpen,\n  avatarName = 'an icon'\n}) => {\n  const {\n    0: hovered,\n    1: setHovered\n  } = useState(false);\n\n  const handleOpen = () => {\n    console.log('setOpenedCardIndex: ', index);\n    setOpenedCardIndex(index); // queueMicrotask(() => onOpen())\n  };\n\n  return href ? /*#__PURE__*/_jsxDEV(WrapItem, {\n    children: /*#__PURE__*/_jsxDEV(LinkBox, {\n      as: \"section\",\n      boxSize: \"120px\",\n      maxW: \"sm\",\n      position: \"relative\",\n      d: \"flex\",\n      flexDir: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      rounded: \"md\",\n      bg: \"gray.700\",\n      _hover: {\n        backgroundColor: 'gray.600',\n        boxShadow: '0 0px 8px black'\n      },\n      onMouseEnter: () => setHovered(true),\n      onMouseLeave: () => setTimeout(() => setHovered(false), 3000),\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `${href}favicon.ico`,\n        name: avatarName,\n        boxSize: \"50px\",\n        my: 2,\n        p: \"3px\",\n        bg: \"gray.400\",\n        boxShadow: hovered ? '0 0 20px black' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        maxW: \"100px\",\n        fontSize: \"14px\",\n        textAlign: \"center\",\n        isTruncated: true,\n        children: /*#__PURE__*/_jsxDEV(LinkOverlay, {\n          href: href,\n          isExternal: true,\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        w: 4,\n        h: 4,\n        p: \"3px\",\n        color: \"gray.500\",\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        onClick: handleOpen,\n        cursor: \"pointer\",\n        style: {\n          display: hovered ? 'block' : 'none'\n        },\n        _hover: {\n          color: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(WrapItem, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      boxSize: \"120px\",\n      bg: \"gray.600\",\n      d: \"flex\",\n      flexDir: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        maxW: \"100px\",\n        textAlign: \"center\",\n        isTruncated: true,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js"],"names":["React","useState","Text","WrapItem","Avatar","Button","LinkBox","LinkOverlay","AddIcon","HamburgerIcon","Card","href","text","index","setOpenedCardIndex","onOpen","avatarName","hovered","setHovered","handleOpen","console","log","backgroundColor","boxShadow","setTimeout","display","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkDC,WAAlD,QAAqE,kBAArE;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,kBAAvC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAK,GAAG,CAAC,CAAvB;AAA0BC,EAAAA,kBAA1B;AAA8CC,EAAAA,MAA9C;AAAsDC,EAAAA,UAAU,GAAG;AAAnE,CAAD,KAAoF;AAC/F,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMkB,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCR,KAApC;AACAC,IAAAA,kBAAkB,CAACD,KAAD,CAAlB,CAFuB,CAGvB;AACD,GAJD;;AAKA,SAAOF,IAAI,gBACT,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,MAAA,QAAQ,EAAC,UAJX;AAKE,MAAA,CAAC,EAAC,MALJ;AAME,MAAA,OAAO,EAAC,QANV;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,cAAc,EAAC,QARjB;AASE,MAAA,OAAO,EAAC,IATV;AAUE,MAAA,EAAE,EAAC,UAVL;AAWE,MAAA,MAAM,EAAE;AAAEW,QAAAA,eAAe,EAAE,UAAnB;AAA+BC,QAAAA,SAAS,EAAE;AAA1C,OAXV;AAYE,MAAA,YAAY,EAAE,MAAML,UAAU,CAAC,IAAD,CAZhC;AAaE,MAAA,YAAY,EAAE,MAAMM,UAAU,CAAC,MAAMN,UAAU,CAAC,KAAD,CAAjB,EAA0B,IAA1B,CAbhC;AAAA,8BAeE,QAAC,MAAD;AACE,QAAA,GAAG,EAAG,GAAEP,IAAK,aADf;AAEE,QAAA,IAAI,EAAEK,UAFR;AAGE,QAAA,OAAO,EAAC,MAHV;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,CAAC,EAAC,KALJ;AAME,QAAA,EAAE,EAAC,UANL;AAOE,QAAA,SAAS,EAAEC,OAAO,GAAG,gBAAH,GAAsB;AAP1C;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,QAAQ,EAAC,MAA5B;AAAmC,QAAA,SAAS,EAAC,QAA7C;AAAsD,QAAA,WAAW,MAAjE;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEN,IAAnB;AAAyB,UAAA,UAAU,MAAnC;AAAA,oBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF,eA6BE,QAAC,aAAD;AACE,QAAA,CAAC,EAAE,CADL;AAEE,QAAA,CAAC,EAAE,CAFL;AAGE,QAAA,CAAC,EAAC,KAHJ;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,QAAQ,EAAC,UALX;AAME,QAAA,GAAG,EAAC,KANN;AAOE,QAAA,KAAK,EAAC,KAPR;AAQE,QAAA,OAAO,EAAEO,UARX;AASE,QAAA,MAAM,EAAC,SATT;AAUE,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAER,OAAO,GAAG,OAAH,GAAa;AAA/B,SAVT;AAWE,QAAA,MAAM,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT;AAXV;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADS,gBA+CT,QAAC,QAAD;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,UAAjB;AAA6B,MAAA,OAAO,EAAC,OAArC;AAA6C,MAAA,EAAE,EAAC,UAAhD;AAA2D,MAAA,CAAC,EAAC,MAA7D;AAAoE,MAAA,OAAO,EAAC,QAA5E;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,WAAW,MAAjD;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UA/CF;AAuDD,CA9DD;;AAgEA,eAAeT,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Text, WrapItem, Avatar, Button, LinkBox, LinkOverlay } from '@chakra-ui/react'\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons'\n\nconst Card = ({ href, text, index = -1, setOpenedCardIndex, onOpen, avatarName = 'an icon' }) => {\n  const [hovered, setHovered] = useState(false)\n  const handleOpen = () => {\n    console.log('setOpenedCardIndex: ', index)\n    setOpenedCardIndex(index)\n    // queueMicrotask(() => onOpen())\n  }\n  return href ? (\n    <WrapItem>\n      <LinkBox\n        as=\"section\"\n        boxSize=\"120px\"\n        maxW=\"sm\"\n        position=\"relative\"\n        d=\"flex\"\n        flexDir=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        rounded=\"md\"\n        bg=\"gray.700\"\n        _hover={{ backgroundColor: 'gray.600', boxShadow: '0 0px 8px black' }}\n        onMouseEnter={() => setHovered(true)}\n        onMouseLeave={() => setTimeout(() => setHovered(false), 3000)}\n      >\n        <Avatar\n          src={`${href}favicon.ico`}\n          name={avatarName}\n          boxSize=\"50px\"\n          my={2}\n          p=\"3px\"\n          bg=\"gray.400\"\n          boxShadow={hovered ? '0 0 20px black' : ''}\n        />\n        <Text maxW=\"100px\" fontSize=\"14px\" textAlign=\"center\" isTruncated>\n          <LinkOverlay href={href} isExternal>\n            {text}\n          </LinkOverlay>\n        </Text>\n        <HamburgerIcon\n          w={4}\n          h={4}\n          p=\"3px\"\n          color=\"gray.500\"\n          position=\"absolute\"\n          top=\"5px\"\n          right=\"5px\"\n          onClick={handleOpen}\n          cursor=\"pointer\"\n          style={{ display: hovered ? 'block' : 'none' }}\n          _hover={{ color: 'white' }}\n        />\n      </LinkBox>\n    </WrapItem>\n  ) : (\n    <WrapItem>\n      <Button onClick={handleOpen} boxSize=\"120px\" bg=\"gray.600\" d=\"flex\" flexDir=\"column\">\n        <Text maxW=\"100px\" textAlign=\"center\" isTruncated>\n          <AddIcon />\n        </Text>\n      </Button>\n    </WrapItem>\n  )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}