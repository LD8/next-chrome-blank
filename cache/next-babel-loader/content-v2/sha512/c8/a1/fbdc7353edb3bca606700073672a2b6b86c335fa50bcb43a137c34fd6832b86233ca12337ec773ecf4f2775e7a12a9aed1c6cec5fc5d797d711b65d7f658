{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Text, Center, WrapItem, Avatar, Button, Box } from '@chakra-ui/react';\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons';\n\nvar Card = function Card(_ref) {\n  _s();\n\n  var href = _ref.href,\n      text = _ref.text,\n      _ref$index = _ref.index,\n      index = _ref$index === void 0 ? -1 : _ref$index,\n      setOpenedCardIndex = _ref.setOpenedCardIndex,\n      onOpen = _ref.onOpen,\n      _ref$avatarName = _ref.avatarName,\n      avatarName = _ref$avatarName === void 0 ? 'an icon' : _ref$avatarName;\n\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHovered = _useState[1];\n\n  var handleOpen = function handleOpen() {\n    setOpenedCardIndex(index); // queueMicrotask(() => onOpen())\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: href ? /*#__PURE__*/_jsxDEV(WrapItem, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        position: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: href,\n          isExternal: true,\n          onMouseEnter: function onMouseEnter() {\n            return setHovered(true);\n          },\n          onMouseLeave: function onMouseLeave() {\n            return setTimeout(function () {\n              return setHovered(false);\n            }, 3000);\n          },\n          boxSize: \"120px\",\n          bg: \"gray.700\",\n          _hover: {\n            backgroundColor: 'gray.600',\n            boxShadow: '0 0px 8px black'\n          },\n          children: /*#__PURE__*/_jsxDEV(Center, {\n            d: \"flex\",\n            flexDir: \"column\",\n            rounded: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: \"\".concat(href, \"favicon.ico\"),\n              name: avatarName,\n              boxSize: \"50px\",\n              my: 2,\n              p: \"3px\",\n              bg: \"gray.400\",\n              boxShadow: hovered ? '0 0 20px black' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              maxW: \"100px\",\n              fontSize: \"14px\",\n              textAlign: \"center\",\n              isTruncated: true,\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n          w: 4,\n          h: 4,\n          p: \"3px\",\n          color: \"gray.500\",\n          position: \"absolute\",\n          top: \"5px\",\n          right: \"5px\",\n          onClick: handleOpen,\n          cursor: \"pointer\",\n          style: {\n            display: hovered ? 'block' : 'none'\n          },\n          _hover: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(WrapItem, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpen,\n        boxSize: \"120px\",\n        bg: \"gray.600\",\n        d: \"flex\",\n        flexDir: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          maxW: \"100px\",\n          textAlign: \"center\",\n          isTruncated: true,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Card, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js"],"names":["React","useState","Link","Text","Center","WrapItem","Avatar","Button","Box","AddIcon","HamburgerIcon","Card","href","text","index","setOpenedCardIndex","onOpen","avatarName","hovered","setHovered","handleOpen","setTimeout","backgroundColor","boxShadow","display","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link, Text, Center, WrapItem, Avatar, Button, Box } from '@chakra-ui/react'\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons'\n\nconst Card = ({ href, text, index = -1, setOpenedCardIndex, onOpen, avatarName = 'an icon' }) => {\n  const [hovered, setHovered] = useState(false)\n  const handleOpen = () => {\n    setOpenedCardIndex(index)\n    // queueMicrotask(() => onOpen())\n  }\n  return (\n    <>\n      {href ? (\n        <WrapItem>\n          <Box position=\"relative\">\n            <Link\n              href={href}\n              isExternal\n              onMouseEnter={() => setHovered(true)}\n              onMouseLeave={() => setTimeout(() => setHovered(false), 3000)}\n              boxSize=\"120px\"\n              bg=\"gray.700\"\n              _hover={{ backgroundColor: 'gray.600', boxShadow: '0 0px 8px black' }}\n            >\n              <Center d=\"flex\" flexDir=\"column\" rounded=\"md\">\n                <Avatar\n                  src={`${href}favicon.ico`}\n                  name={avatarName}\n                  boxSize=\"50px\"\n                  my={2}\n                  p=\"3px\"\n                  bg=\"gray.400\"\n                  boxShadow={hovered ? '0 0 20px black' : ''}\n                />\n                <Text maxW=\"100px\" fontSize=\"14px\" textAlign=\"center\" isTruncated>\n                  {text}\n                </Text>\n              </Center>\n            </Link>\n            <HamburgerIcon\n              w={4}\n              h={4}\n              p=\"3px\"\n              color=\"gray.500\"\n              position=\"absolute\"\n              top=\"5px\"\n              right=\"5px\"\n              onClick={handleOpen}\n              cursor=\"pointer\"\n              style={{ display: hovered ? 'block' : 'none' }}\n              _hover={{ color: 'white' }}\n            />\n          </Box>\n        </WrapItem>\n      ) : (\n        <WrapItem>\n          <Button onClick={handleOpen} boxSize=\"120px\" bg=\"gray.600\" d=\"flex\" flexDir=\"column\">\n            <Text maxW=\"100px\" textAlign=\"center\" isTruncated>\n              <AddIcon />\n            </Text>\n          </Button>\n        </WrapItem>\n      )}\n    </>\n  )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}