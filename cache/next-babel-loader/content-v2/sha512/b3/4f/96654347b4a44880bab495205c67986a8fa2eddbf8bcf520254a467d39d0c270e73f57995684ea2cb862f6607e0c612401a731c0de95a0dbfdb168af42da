{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Link, Text, Center, WrapItem, Avatar, Button, useDisclosure } from '@chakra-ui/react';\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons';\nimport AddOrEditModal from './AddOrEditModal';\n\nconst Card = ({\n  href,\n  text,\n  index,\n  setCardData,\n  cardData,\n  avatarName = 'an icon'\n}) => {\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const modalProps = {\n    isOpen,\n    onClose,\n    href,\n    text,\n    index,\n    setCardData,\n    cardData\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [href ? /*#__PURE__*/_jsxDEV(WrapItem, {\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: href,\n        isExternal: true,\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          onMouseEnter: () => setHover(true),\n          onMouseLeave: () => setTimeout(() => setHover(false), 3000),\n          boxSize: \"120px\",\n          bg: \"gray.700\",\n          d: \"flex\",\n          flexDir: \"column\",\n          rounded: \"md\",\n          _hover: {\n            backgroundColor: 'gray.600',\n            boxShadow: '0 0px 8px black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: `${href}favicon.ico`,\n            name: avatarName,\n            boxSize: \"50px\",\n            my: 2,\n            p: \"3px\",\n            bg: \"gray.400\",\n            boxShadow: hovered ? '0 0 20px black' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            maxW: \"100px\",\n            fontSize: \"14px\",\n            textAlign: \"center\",\n            isTruncated: true,\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        w: 4,\n        h: 4,\n        p: \"3px\",\n        color: \"gray.500\",\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        onClick: onOpen,\n        cursor: \"pointer\",\n        style: {\n          display: hovered ? 'block' : 'none'\n        },\n        _hover: {\n          color: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WrapItem, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onOpen,\n        boxSize: \"120px\",\n        bg: \"gray.600\",\n        d: \"flex\",\n        flexDir: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          maxW: \"100px\",\n          textAlign: \"center\",\n          isTruncated: true,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddOrEditModal, _objectSpread({}, modalProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js"],"names":["React","useState","Link","Text","Center","WrapItem","Avatar","Button","useDisclosure","AddIcon","HamburgerIcon","AddOrEditModal","Card","href","text","index","setCardData","cardData","avatarName","hovered","setHover","isOpen","onOpen","onClose","modalProps","setTimeout","backgroundColor","boxShadow","display","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link, Text, Center, WrapItem, Avatar, Button, useDisclosure } from '@chakra-ui/react'\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons'\nimport AddOrEditModal from './AddOrEditModal'\n\nconst Card = ({ href, text, index, setCardData, cardData, avatarName = 'an icon' }) => {\n  const [hovered, setHover] = useState(false)\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const modalProps = {\n    isOpen,\n    onClose,\n    href,\n    text,\n    index,\n    setCardData,\n    cardData,\n  }\n  return (\n    <>\n      {href ? (\n        <WrapItem position=\"relative\">\n          <Link href={href} isExternal>\n            <Center\n              onMouseEnter={() => setHover(true)}\n              onMouseLeave={() => setTimeout(() => setHover(false), 3000)}\n              boxSize=\"120px\"\n              bg=\"gray.700\"\n              d=\"flex\"\n              flexDir=\"column\"\n              rounded=\"md\"\n              _hover={{ backgroundColor: 'gray.600', boxShadow: '0 0px 8px black' }}\n            >\n              <Avatar\n                src={`${href}favicon.ico`}\n                name={avatarName}\n                boxSize=\"50px\"\n                my={2}\n                p=\"3px\"\n                bg=\"gray.400\"\n                boxShadow={hovered ? '0 0 20px black' : ''}\n              />\n              <Text maxW=\"100px\" fontSize=\"14px\" textAlign=\"center\" isTruncated>\n                {text}\n              </Text>\n            </Center>\n          </Link>\n          <HamburgerIcon\n            w={4}\n            h={4}\n            p=\"3px\"\n            color=\"gray.500\"\n            position=\"absolute\"\n            top=\"5px\"\n            right=\"5px\"\n            onClick={onOpen}\n            cursor=\"pointer\"\n            style={{ display: hovered ? 'block' : 'none' }}\n            _hover={{ color: 'white' }}\n          />\n        </WrapItem>\n      ) : (\n        <WrapItem>\n          <Button onClick={onOpen} boxSize=\"120px\" bg=\"gray.600\" d=\"flex\" flexDir=\"column\">\n            <Text maxW=\"100px\" textAlign=\"center\" isTruncated>\n              <AddIcon />\n            </Text>\n          </Button>\n        </WrapItem>\n      )}\n      <AddOrEditModal {...modalProps} />\n    </>\n  )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}