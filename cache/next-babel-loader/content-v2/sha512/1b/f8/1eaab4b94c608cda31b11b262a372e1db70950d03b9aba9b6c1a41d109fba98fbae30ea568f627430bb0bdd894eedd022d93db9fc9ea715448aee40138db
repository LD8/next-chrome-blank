{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js\";\nimport React, { useState } from 'react';\nimport { Link, Text, Center, WrapItem, Avatar, Button, Box } from '@chakra-ui/react';\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons';\n\nconst Card = ({\n  href,\n  text,\n  index = -1,\n  setOpenedCardIndex,\n  onOpen,\n  avatarName = 'an icon'\n}) => {\n  const {\n    0: hovered,\n    1: setHovered\n  } = useState(false);\n\n  const handleOpen = () => {\n    setOpenedCardIndex(index); // queueMicrotask(() => onOpen())\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: href ? /*#__PURE__*/_jsxDEV(WrapItem, {\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          d: \"flex\",\n          flexDir: \"column\",\n          rounded: \"md\",\n          boxSize: \"120px\",\n          href: href,\n          isExternal: true,\n          onMouseEnter: () => setHovered(true),\n          onMouseLeave: () => setTimeout(() => setHovered(false), 3000),\n          bg: \"gray.700\",\n          _hover: {\n            backgroundColor: 'gray.600',\n            boxShadow: '0 0px 8px black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: `${href}favicon.ico`,\n            name: avatarName,\n            boxSize: \"50px\",\n            my: 2,\n            p: \"3px\",\n            bg: \"gray.400\",\n            boxShadow: hovered ? '0 0 20px black' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            maxW: \"100px\",\n            fontSize: \"14px\",\n            textAlign: \"center\",\n            isTruncated: true,\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        w: 4,\n        h: 4,\n        p: \"3px\",\n        color: \"gray.500\",\n        position: \"absolute\",\n        top: \"5px\",\n        right: \"5px\",\n        onClick: handleOpen,\n        cursor: \"pointer\",\n        style: {\n          display: hovered ? 'block' : 'none'\n        },\n        _hover: {\n          color: 'white'\n        },\n        zIndex: \"1000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WrapItem, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpen,\n        boxSize: \"120px\",\n        bg: \"gray.600\",\n        d: \"flex\",\n        flexDir: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          maxW: \"100px\",\n          textAlign: \"center\",\n          isTruncated: true,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/lipeiwen/Desktop/next-chrome-blank/components/Card.js"],"names":["React","useState","Link","Text","Center","WrapItem","Avatar","Button","Box","AddIcon","HamburgerIcon","Card","href","text","index","setOpenedCardIndex","onOpen","avatarName","hovered","setHovered","handleOpen","setTimeout","backgroundColor","boxShadow","display","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link, Text, Center, WrapItem, Avatar, Button, Box } from '@chakra-ui/react'\nimport { AddIcon, HamburgerIcon } from '@chakra-ui/icons'\n\nconst Card = ({ href, text, index = -1, setOpenedCardIndex, onOpen, avatarName = 'an icon' }) => {\n  const [hovered, setHovered] = useState(false)\n  const handleOpen = () => {\n    setOpenedCardIndex(index)\n    // queueMicrotask(() => onOpen())\n  }\n  return (\n    <>\n      {href ? (\n        <WrapItem position=\"relative\">\n          <Link>\n            <Center\n              d=\"flex\"\n              flexDir=\"column\"\n              rounded=\"md\"\n              boxSize=\"120px\"\n              href={href}\n              isExternal\n              onMouseEnter={() => setHovered(true)}\n              onMouseLeave={() => setTimeout(() => setHovered(false), 3000)}\n              bg=\"gray.700\"\n              _hover={{ backgroundColor: 'gray.600', boxShadow: '0 0px 8px black' }}\n            >\n              <Avatar\n                src={`${href}favicon.ico`}\n                name={avatarName}\n                boxSize=\"50px\"\n                my={2}\n                p=\"3px\"\n                bg=\"gray.400\"\n                boxShadow={hovered ? '0 0 20px black' : ''}\n              />\n              <Text maxW=\"100px\" fontSize=\"14px\" textAlign=\"center\" isTruncated>\n                {text}\n              </Text>\n            </Center>\n          </Link>\n          <HamburgerIcon\n            w={4}\n            h={4}\n            p=\"3px\"\n            color=\"gray.500\"\n            position=\"absolute\"\n            top=\"5px\"\n            right=\"5px\"\n            onClick={handleOpen}\n            cursor=\"pointer\"\n            style={{ display: hovered ? 'block' : 'none' }}\n            _hover={{ color: 'white' }}\n            zIndex=\"1000\"\n          />\n        </WrapItem>\n      ) : (\n        <WrapItem>\n          <Button onClick={handleOpen} boxSize=\"120px\" bg=\"gray.600\" d=\"flex\" flexDir=\"column\">\n            <Text maxW=\"100px\" textAlign=\"center\" isTruncated>\n              <AddIcon />\n            </Text>\n          </Button>\n        </WrapItem>\n      )}\n    </>\n  )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}